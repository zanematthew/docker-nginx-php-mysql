version: '3'
services:
  composer:
    build:
      context: ./composer
    container_name: ${APP_NAME}_composer
    volumes:
      - "./web/src:/app"
      - "./composer/cache:/root/.composer"
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.2.2
    container_name: ${APP_NAME}_elasticsearch
    environment:
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - "./elasticsearch/esdata1:/usr/share/elasticsearch/data"
      - "./elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml"
    ports:
      - 9200:9200
    networks:
      - ${APP_NAME}_network
  kibana:
    image: docker.elastic.co/kibana/kibana:6.2.2
    container_name: ${APP_NAME}_kibana
    volumes:
      - ./kibana/kibana.yml:/usr/share/kibana/config/kibana.yml
    ports:
      - 5601:5601
    networks:
      - ${APP_NAME}_network
  myadmin:
    image: phpmyadmin/phpmyadmin
    container_name: ${APP_NAME}_phpmyadmin
    ports:
      - "8080:80"
    environment:
      - PMA_ARBITRARY=1
      - PMA_HOST=${MYSQL_HOST}
    restart: always
    networks:
      - ${APP_NAME}_network
  mysqldb:
    image: mysql
    container_name: ${MYSQL_HOST}
    restart: always
    env_file:
      - ".env"
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    ports:
      - "8989:3306"
    volumes:
      - "./mysqldb/data/db/mysql:/var/lib/mysql"
    networks:
      - ${APP_NAME}_network
  node:
    build:
      context: ./node
    container_name: ${APP_NAME}_node
  php:
    build:
      context: ./php-fpm
    container_name: ${APP_NAME}_php
    restart: always
    volumes:
      - "./web/etc/php/php.ini:/usr/local/etc/php/conf.d/php.ini"
      - "./web/src:/var/www/html"
    networks:
      - ${APP_NAME}_network
  redis:
    image: redis
    container_name: ${APP_NAME}_redis
    ports:
      - "6379:6379"
    volumes:
      - "./redis/data:/data"
    restart: always
    networks:
      - ${APP_NAME}_network
  web:
    image: nginx:alpine
    container_name: ${APP_NAME}_web
    volumes:
      - "./web/etc/nginx/default.conf:/etc/nginx/conf.d/default.conf"
      - "./web/etc/ssl:/etc/ssl"
      - "./web/src:/var/www/html"
      - "./web/etc/nginx/default.template.conf:/etc/nginx/conf.d/default.template"
    ports:
      - "44300:443"
    environment:
      - NGINX_HOST=${NGINX_HOST}
    command: /bin/sh -c "envsubst '$$NGINX_HOST' < /etc/nginx/conf.d/default.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
    restart: always
    networks:
      - ${APP_NAME}_network
volumes:
  esdata1:
    driver: local
networks:
  mybmx_network: